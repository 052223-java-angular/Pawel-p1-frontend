{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth-service.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nfunction RegisterComponent_ng_container_7_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 11);\n    i0.ɵɵtext(1, \" Username cannot be empty \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, RegisterComponent_ng_container_7_small_1_Template, 2, 0, \"small\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.registerForm.controls[\"username\"] == null ? null : ctx_r0.registerForm.controls[\"username\"].touched);\n  }\n}\nfunction RegisterComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 11);\n    i0.ɵɵelementStart(1, \"small\");\n    i0.ɵɵtext(2, \"Password cannot be empty\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction RegisterComponent_ng_container_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 11);\n    i0.ɵɵelementStart(1, \"small\");\n    i0.ɵɵtext(2, \"Confirm password cannot be empty\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nclass RegisterComponent {\n  constructor(fb, authService, router, toastr) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.toastr = toastr;\n  }\n  ngOnInit() {\n    this.registerForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n      confirmedPassword: ['', Validators.required]\n    });\n  }\n  submitForm() {\n    if (this.registerForm && this.registerForm.invalid) {\n      if (this.registerForm.controls['username'].value.length === 0) {\n        this.registerForm.controls['username'].markAsTouched();\n        this.registerForm.controls['password'].markAsTouched();\n        this.registerForm.controls['confirmedPassword'].markAsTouched;\n        this.registerForm.reset();\n        return;\n      }\n      //this.registerForm.reset();\n      const payload = {\n        username: this.registerForm.controls['username'].value,\n        password: this.registerForm.controls['password'].value,\n        confirmedPassword: this.registerForm.controls['confirmedPassword'].value\n      };\n      console.log(\"Username Entered: \", payload.username);\n      console.log(\"Password Entered: \", payload.password);\n      console.log(\"Confirmed Password Entered: \", payload.confirmedPassword);\n      // //service sends payload to backend \n      this.authService.register(payload).subscribe({\n        next: value => {\n          this.toastr.success('Reigstration Successful');\n          this.router.navigate(['/login']);\n        },\n        error: error => {\n          console.log(error.error.message);\n          this.toastr.error('Error');\n        }\n      });\n    }\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthServiceService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 20,\n  vars: 4,\n  consts: [[1, \"flex\", \"flex-col\", \"items-center\"], [1, \"flex\", \"flex-col\", \"items-center\", \"gap-10\", \"my-40\", \"shadow-xl\", \"p-20\", \"rounded-md\", \"bg-gradient-to-tr\", \"from-yellow-900\", \"to-yellow-200\", \"text-white\", 3, \"formGroup\", \"ngSubmit\"], [1, \"font-bold\", \"text-4xl\"], [1, \"flex\", \"flex-col\"], [\"type\", \"username\", \"placeholder\", \"text\", \"formControlName\", \"username\", 1, \"bg-orange-100\", \"px-5\", \"py-2\", \"rounded-md\", \"shadow-2xl\", \"transition\", \"focus:ease-out\", \"focus:scale-110\", \"duration-300\", \"shadow-orange-700\", \"text-black\"], [4, \"ngIf\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\", 1, \"bg-orange-100\", \"px-5\", \"py-2\", \"rounded-md\", \"shadow-2xl\", \"transition\", \"focus:ease-out\", \"focus:scale-110\", \"duration-300\", \"shadow-orange-700\", \"text-black\"], [\"class\", \"text-black\", 4, \"ngIf\"], [\"type\", \"password\", \"placeholder\", \"confirmedPassword Password\", \"formControlName\", \"confirmedPassword\", 1, \"bg-orange-100\", \"px-5\", \"py-2\", \"rounded-md\", \"shadow-2xl\", \"transition\", \"focus:ease-out\", \"focus:scale-110\", \"duration-300\", \"shadow-orange-700\", \"text-black\"], [\"type\", \"submit\", 1, \"bg-yellow-950\", \"px-5\", \"py-2\", \"text-white\", \"rounded-md\", \"shadow-xl\", \"transition\", \"hover:ease-out\", \"hover:scale-110\", \"duration-300\"], [\"routerLink\", \"/login\", 1, \"text-white\", \"underline\", \"underline-offset-4\"], [1, \"text-black\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"REGISTER...\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\", 3);\n      i0.ɵɵtext(5, \" Username: \");\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, RegisterComponent_ng_container_7_Template, 2, 1, \"ng-container\", 5);\n      i0.ɵɵelementStart(8, \"label\", 3);\n      i0.ɵɵtext(9, \" Password: \");\n      i0.ɵɵelement(10, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, RegisterComponent_ng_container_11_Template, 3, 0, \"ng-container\", 7);\n      i0.ɵɵelementStart(12, \"label\", 3);\n      i0.ɵɵtext(13, \" Confirm Password: \");\n      i0.ɵɵelement(14, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(15, RegisterComponent_ng_container_15_Template, 3, 0, \"ng-container\", 7);\n      i0.ɵɵelementStart(16, \"button\", 9);\n      i0.ɵɵtext(17, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"a\", 10);\n      i0.ɵɵtext(19, \"Already have an account?\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.controls[\"username\"] == null ? null : ctx.registerForm.controls[\"username\"].errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.controls[\"password\"] == null ? null : ctx.registerForm.controls[\"password\"].touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.controls[\"confirmedPassword\"] == null ? null : ctx.registerForm.controls[\"confirmedPassword\"].touched);\n    }\n  },\n  dependencies: [i5.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { RegisterComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerStart","ɵɵtemplate","RegisterComponent_ng_container_7_small_1_Template","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ctx_r0","registerForm","controls","touched","RegisterComponent","constructor","fb","authService","router","toastr","ngOnInit","group","username","required","password","confirmedPassword","submitForm","invalid","value","length","markAsTouched","reset","payload","console","log","register","subscribe","next","success","navigate","error","message","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthServiceService","i3","Router","i4","ToastrService","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_1_listener","ɵɵelement","RegisterComponent_ng_container_7_Template","RegisterComponent_ng_container_11_Template","RegisterComponent_ng_container_15_Template","errors"],"sources":["/Users/pawellaciak/revature-p1/Pawel-p1-frontend/src/app/pages/register/register.component.ts","/Users/pawellaciak/revature-p1/Pawel-p1-frontend/src/app/pages/register/register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport{ FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { RegisterPayload } from 'src/app/models/register-payload';\nimport { AuthServiceService } from 'src/app/services/auth-service.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm!: FormGroup;\n  constructor(private fb: FormBuilder, private authService: AuthServiceService,  private router: Router,private toastr:ToastrService ) {}\n\n    \n\n  ngOnInit(): void {\n    this.registerForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n      confirmedPassword: ['', Validators.required],\n  });\n  }\n\n  submitForm(): void {\n\n    if(this.registerForm && this.registerForm.invalid){\n      if(this.registerForm.controls['username'].value.length === 0){\n\n\n      this.registerForm.controls['username'].markAsTouched();\n      this.registerForm.controls['password'].markAsTouched();\n      this.registerForm.controls['confirmedPassword'].markAsTouched;\n      this.registerForm.reset();\n      return;\n    }\n\n    //this.registerForm.reset();\n\n    const payload: RegisterPayload = {\n      username: this.registerForm.controls['username'].value,\n      password: this.registerForm.controls['password'].value,\n      confirmedPassword: this.registerForm.controls['confirmedPassword'].value,\n      };\n    console.log(\"Username Entered: \", payload.username);\n      console.log(\"Password Entered: \", payload.password);\n      console.log(\"Confirmed Password Entered: \", payload.confirmedPassword);\n    // //service sends payload to backend \n\n    this.authService.register(payload).subscribe( {\n      next: value => {\n         this.toastr.success('Reigstration Successful');\n         this.router.navigate(['/login']);\n         \n    },\n      \n      error: error => {console.log(error.error.message);\n        \n        this.toastr.error('Error');\n        \n\n  } \n    \n    }); \n  }\n\n}\n}\n","<div class=\"flex flex-col items-center\">\n    <form [formGroup] = \"registerForm\" (ngSubmit)=\"submitForm()\" class=\"flex flex-col items-center gap-10 my-40 shadow-xl p-20 rounded-md bg-gradient-to-tr from-yellow-900 to-yellow-200 text-white\">\n\n        <h1 class=\"font-bold text-4xl\">REGISTER...</h1>\n    \n        <label class=\"flex flex-col\">\n            Username:\n            <input class=\"bg-orange-100 px-5 py-2 rounded-md shadow-2xl transition focus:ease-out focus:scale-110 duration-300 shadow-orange-700 text-black\" type=\"username\" placeholder=\"text\" formControlName=\"username\"/>\n        </label>\n        <ng-container *ngIf=\"registerForm.controls['username']?.errors\">\n            <small class = \"text-black\" *ngIf=\"registerForm.controls['username']?.touched\">\n            Username cannot be empty\n            </small>\n        </ng-container>\n\n        \n    \n        <label class= \"flex flex-col\">\n            Password:\n            <input class=\"bg-orange-100 px-5 py-2 rounded-md shadow-2xl transition focus:ease-out focus:scale-110 duration-300 shadow-orange-700 text-black\" type=\"password\" placeholder=\"Password\" formControlName=\"password\"/>\n        </label>\n        <ng-container class = \"text-black\" *ngIf=\"registerForm.controls['password']?.touched\">\n            <small>Password cannot be empty</small>\n        </ng-container>\n        <label class= \"flex flex-col\">\n            Confirm Password:\n            <input class=\"bg-orange-100 px-5 py-2 rounded-md shadow-2xl transition focus:ease-out focus:scale-110 duration-300 shadow-orange-700 text-black\" type=\"password\" placeholder=\"confirmedPassword Password\" formControlName=\"confirmedPassword\"/>\n    \n        </label>\n        <ng-container class = \"text-black\" *ngIf=\"registerForm.controls['confirmedPassword']?.touched\">\n            <small>Confirm password cannot be empty</small>\n        </ng-container>\n    \n        <button type=\"submit\" class =\"bg-yellow-950 px-5 py-2 text-white rounded-md shadow-xl transition hover:ease-out hover:scale-110 duration-300\">Register</button>\n    \n        <a class=\"text-white underline underline-offset-4\" routerLink=\"/login\">Already have an account?</a>\n    \n    </form>\n    \n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}