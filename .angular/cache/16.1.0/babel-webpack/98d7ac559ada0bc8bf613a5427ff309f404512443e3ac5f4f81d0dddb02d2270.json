{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AuthServiceService {\n  constructor(http) {\n    this.http = http;\n  }\n  register(registerPayload) {\n    return this.http.post('http://localhost:8081/beerme/api/auth/register', registerPayload);\n  }\n}\nAuthServiceService.ɵfac = function AuthServiceService_Factory(t) {\n  return new (t || AuthServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthServiceService,\n  factory: AuthServiceService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthServiceService };","map":{"version":3,"names":["AuthServiceService","constructor","http","register","registerPayload","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/pawellaciak/revature-p1/Pawel-p1-frontend/src/app/services/auth-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { RegisterPayload } from '../models/register-payload';\nimport { Observable } from 'rxjs';\nimport { Auth } from '../models/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n\n\n\n\n  constructor(private http: HttpClient) { }\n\n  register(registerPayload: RegisterPayload): Observable<Auth>{\n    return this.http.post<Auth>('http://localhost:8081/beerme/api/auth/register', registerPayload);\n  }\n\n}\n"],"mappings":";;AAMA,MAGaA,kBAAkB;EAK7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,QAAQA,CAACC,eAAgC;IACvC,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAO,gDAAgD,EAAED,eAAe,CAAC;EAChG;;AATWJ,kBAAkB,C;mBAAlBA,kBAAkB,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAlBT,kBAAkB,C;SAAlBA,kBAAkB;EAAAU,OAAA,EAAlBV,kBAAkB,CAAAW,IAAA;EAAAC,UAAA,EAFjB;AAAM;SAEPZ,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}