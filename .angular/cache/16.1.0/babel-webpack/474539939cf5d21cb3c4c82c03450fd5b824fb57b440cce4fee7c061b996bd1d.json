{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth-service.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_ng_container_7_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 10);\n    i0.ɵɵtext(1, \" Username cannot be empty \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, LoginComponent_ng_container_7_small_1_Template, 2, 0, \"small\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loginForm.controls[\"username\"] == null ? null : ctx_r0.loginForm.controls[\"username\"].touched);\n  }\n}\nfunction LoginComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 10);\n    i0.ɵɵelementStart(1, \"small\");\n    i0.ɵɵtext(2, \"Password cannot be empty\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nclass LoginComponent {\n  constructor(fb, authService, router, toastr) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.toastr = toastr;\n    this.validUsername = true;\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  submitForm() {\n    if (this.loginForm && this.loginForm.invalid) {\n      if (!this.loginForm.controls['username'].value.test(\"^(?=[a-zA-Z0-9._]{8,20}$)(?!.*[_.]{2})[^_.].*[^_.]$\")) {\n        this.validUsername = false;\n      }\n      this.loginForm.controls['username'].markAsTouched();\n      this.loginForm.controls['password'].markAsTouched();\n      this.loginForm.reset();\n      return;\n    }\n    //this.loginForm.reset();\n    const payload = {\n      username: this.loginForm.controls['username'].value,\n      password: this.loginForm.controls['password'].value\n    };\n    console.log(\"Username Entered: \", payload.username);\n    console.log(\"Password Entered: \", payload.password);\n    // //service sends payload to backend \n    this.authService.login(payload).subscribe({\n      next: value => {\n        this.toastr.success('Login Successful');\n        this.router.navigate(['/reviews']);\n      },\n      error: error => {\n        console.log(error.error.message);\n        this.toastr.error('Error');\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthServiceService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 16,\n  vars: 3,\n  consts: [[1, \"flex\", \"flex-col\", \"items-center\"], [1, \"flex\", \"flex-col\", \"items-center\", \"gap-10\", \"my-40\", \"shadow-xl\", \"p-20\", \"rounded-md\", \"bg-gradient-to-tr\", \"from-yellow-900\", \"to-yellow-200\", \"text-white\", 3, \"formGroup\", \"ngSubmit\"], [1, \"font-bold\", \"text-4xl\"], [1, \"flex\", \"flex-col\"], [\"type\", \"username\", \"placeholder\", \"text\", \"formControlName\", \"username\", 1, \"bg-orange-100\", \"px-5\", \"py-2\", \"rounded-md\", \"shadow-2xl\", \"transition\", \"focus:ease-out\", \"focus:scale-110\", \"duration-300\", \"shadow-orange-700\", \"text-black\"], [4, \"ngIf\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\", 1, \"bg-orange-100\", \"px-5\", \"py-2\", \"rounded-md\", \"shadow-2xl\", \"transition\", \"focus:ease-out\", \"focus:scale-110\", \"duration-300\", \"shadow-orange-700\", \"text-black\"], [\"class\", \"text-black\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"bg-yellow-950\", \"px-5\", \"py-2\", \"text-white\", \"rounded-md\", \"shadow-xl\", \"transition\", \"hover:ease-out\", \"hover:scale-110\", \"duration-300\"], [\"routerLink\", \"/login\", 1, \"text-white\", \"underline\", \"underline-offset-4\"], [1, \"text-black\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Please Log In\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\", 3);\n      i0.ɵɵtext(5, \" Username: \");\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, LoginComponent_ng_container_7_Template, 2, 1, \"ng-container\", 5);\n      i0.ɵɵelementStart(8, \"label\", 3);\n      i0.ɵɵtext(9, \" Password: \");\n      i0.ɵɵelement(10, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, LoginComponent_ng_container_11_Template, 3, 0, \"ng-container\", 7);\n      i0.ɵɵelementStart(12, \"button\", 8);\n      i0.ɵɵtext(13, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"a\", 9);\n      i0.ɵɵtext(15, \"Already have an account?\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"username\"] == null ? null : ctx.loginForm.controls[\"username\"].errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"password\"] == null ? null : ctx.loginForm.controls[\"password\"].touched);\n    }\n  },\n  dependencies: [i5.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerStart","ɵɵtemplate","LoginComponent_ng_container_7_small_1_Template","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ctx_r0","loginForm","controls","touched","LoginComponent","constructor","fb","authService","router","toastr","validUsername","ngOnInit","group","username","required","password","submitForm","invalid","value","test","markAsTouched","reset","payload","console","log","login","subscribe","next","success","navigate","error","message","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthServiceService","i3","Router","i4","ToastrService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_1_listener","ɵɵelement","LoginComponent_ng_container_7_Template","LoginComponent_ng_container_11_Template","errors"],"sources":["/Users/pawellaciak/revature-p1/Pawel-p1-frontend/src/app/pages/login/login.component.ts","/Users/pawellaciak/revature-p1/Pawel-p1-frontend/src/app/pages/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Form, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthServiceService } from 'src/app/services/auth-service.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { LoginPayload } from 'src/app/models/login-payload';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n  validUsername: boolean = true;\n  \n  constructor(private fb: FormBuilder, \n    private authService: AuthServiceService,  \n    private router: Router, \n    private toastr:ToastrService ) {}\n\n    \n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n      \n  });\n  }\n\n  submitForm(): void {\n\n    if(this.loginForm && this.loginForm.invalid){\n      \n      if(!this.loginForm.controls['username'].value.test(\"^(?=[a-zA-Z0-9._]{8,20}$)(?!.*[_.]{2})[^_.].*[^_.]$\")){\n        this.validUsername = false;\n      }\n      \n\n\n      this.loginForm.controls['username'].markAsTouched();\n      this.loginForm.controls['password'].markAsTouched();\n      this.loginForm.reset();\n      return;\n    }\n\n    //this.loginForm.reset();\n\n    const payload: LoginPayload = {\n      username: this.loginForm.controls['username'].value,\n      password: this.loginForm.controls['password'].value,\n      };\n    console.log(\"Username Entered: \", payload.username);\n      console.log(\"Password Entered: \", payload.password);\n    // //service sends payload to backend \n\n    this.authService.login(payload).subscribe( {\n      next: value => {\n         this.toastr.success('Login Successful');\n         this.router.navigate(['/reviews']);\n         \n    },\n      \n      error: error => {console.log(error.error.message);\n        \n        this.toastr.error('Error');\n        \n\n  } \n    \n    }); \n  }\n\n}","<div class=\"flex flex-col items-center\">\n    <form [formGroup] = \"loginForm\" (ngSubmit)=\"submitForm()\" class=\"flex flex-col items-center gap-10 my-40 shadow-xl p-20 rounded-md bg-gradient-to-tr from-yellow-900 to-yellow-200 text-white\">\n\n        <h1 class=\"font-bold text-4xl\">Please Log In</h1>\n    \n        <label class=\"flex flex-col\">\n            Username:\n            <input class=\"bg-orange-100 px-5 py-2 rounded-md shadow-2xl transition focus:ease-out focus:scale-110 duration-300 shadow-orange-700 text-black\" type=\"username\" placeholder=\"text\" formControlName=\"username\"/>\n        </label>\n        <ng-container *ngIf=\"loginForm.controls['username']?.errors\">\n            <small class = \"text-black\" *ngIf=\"loginForm.controls['username']?.touched\">\n            Username cannot be empty\n            </small>\n            \n        </ng-container>\n\n        \n    \n        <label class= \"flex flex-col\">\n            Password:\n            <input class=\"bg-orange-100 px-5 py-2 rounded-md shadow-2xl transition focus:ease-out focus:scale-110 duration-300 shadow-orange-700 text-black\" type=\"password\" placeholder=\"Password\" formControlName=\"password\"/>\n        </label>\n        <ng-container class = \"text-black\" *ngIf=\"loginForm.controls['password']?.touched\">\n            <small>Password cannot be empty</small>\n        </ng-container>\n      \n    \n        <button type=\"submit\" class =\"bg-yellow-950 px-5 py-2 text-white rounded-md shadow-xl transition hover:ease-out hover:scale-110 duration-300\">Login</button>\n    \n        <a class=\"text-white underline underline-offset-4\" routerLink=\"/login\">Already have an account?</a>\n    \n    </form>\n    \n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}